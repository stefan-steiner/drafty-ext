(()=>{"use strict";class e{constructor(){this.authToken=null}static getInstance(){return e.instance||(e.instance=new e),e.instance}setAuthToken(e){this.authToken=e}getAuthToken(){return this.authToken}clearAuthToken(){this.authToken=null}async makeRequest(e,t={}){const s=`http://127.0.0.1:8000/api${e}`,r={"Content-Type":"application/json"};this.authToken&&(r.Authorization=`Token ${this.authToken.token}`);try{const e=await fetch(s,{...t,headers:{...r,...t.headers}}),a=await e.json();return e.ok?{success:!0,data:a}:{success:!1,error:a.error||a.message||`HTTP ${e.status}`}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Network error"}}}async login(e,t){const s=await this.makeRequest("/users/login/",{method:"POST",body:JSON.stringify({username:e,password:t})});return s.success&&s.data?{success:!0,data:{token:{token:s.data.token,expiresAt:Date.now()+864e5,userId:s.data.user_id.toString()},user:{id:s.data.user_id.toString(),email:"",name:s.data.username}}}:s}async signup(e,t,s,r){const a=await this.makeRequest("/users/register/",{method:"POST",body:JSON.stringify({username:e,email:t,password:s,first_name:r.split(" ")[0]||r,last_name:r.split(" ").slice(1).join(" ")||""})});return a.success&&a.data?{success:!0,data:{token:{token:a.data.token,expiresAt:Date.now()+864e5,userId:a.data.user_id.toString()},user:{id:a.data.user_id.toString(),email:t,name:a.data.username}}}:a}async logout(){return this.makeRequest("/users/logout/",{method:"POST"})}async getPlayerDataByName(e){return this.makeRequest(`/players/data/${encodeURIComponent(e)}/`)}async getCurrentUser(){const e=await this.makeRequest("/users/validate-token/");return e.success&&e.data?{success:!0,data:{id:e.data.user_id.toString(),email:"",name:e.data.username}}:e}}const t="auth_token",s="user_data";class r{constructor(){}static getInstance(){return r.instance||(r.instance=new r),r.instance}async get(e){try{return(await chrome.storage.local.get(e))[e]||null}catch(e){return console.error("Error getting from storage:",e),null}}async set(e,t){try{await chrome.storage.local.set({[e]:t})}catch(e){console.error("Error setting storage:",e)}}async remove(e){try{await chrome.storage.local.remove(e)}catch(e){console.error("Error removing from storage:",e)}}async clear(){try{await chrome.storage.local.clear()}catch(e){console.error("Error clearing storage:",e)}}async getAuthToken(){const e=await this.get(t);return e?Date.now()>e.expiresAt?(await this.clearAuthToken(),null):e:null}async setAuthToken(e){await this.set(t,e)}async clearAuthToken(){await this.remove(t)}async getUserData(){return this.get(s)}async setUserData(e){await this.set(s,e)}async clearUserData(){await this.remove(s)}}class a{constructor(){this.currentUser=null,this.apiService=e.getInstance(),this.storageService=r.getInstance(),this.initialize()}async initialize(){try{await this.checkAuthStatus(),this.setupEventListeners()}catch(e){console.error("Error initializing popup:",e),this.showError("Failed to initialize extension")}}async checkAuthStatus(){const e=await this.storageService.getAuthToken();if(e){this.apiService.setAuthToken(e);const t=await this.storageService.getUserData();if(t)this.currentUser=t,this.showDashboard();else{const e=await this.apiService.getCurrentUser();e.success&&e.data?(this.currentUser=e.data,await this.storageService.setUserData(e.data),this.showDashboard()):(await this.storageService.clearAuthToken(),this.showLogin())}}else this.showLogin()}setupEventListeners(){const e=document.getElementById("loginForm");e&&e.addEventListener("submit",e=>this.handleLogin(e));const t=document.getElementById("signupForm");t&&t.addEventListener("submit",e=>this.handleSignup(e));const s=document.getElementById("showSignup");s&&s.addEventListener("click",e=>{e.preventDefault(),this.showSignup()});const r=document.getElementById("showLogin");r&&r.addEventListener("click",e=>{e.preventDefault(),this.showLogin()});const a=document.getElementById("logoutBtn");a&&a.addEventListener("click",()=>this.handleLogout());const n=document.getElementById("retryBtn");n&&n.addEventListener("click",()=>this.initialize())}async handleLogin(e){e.preventDefault();const t=document.getElementById("loginUsername").value,s=document.getElementById("loginPassword").value;if(t&&s){this.showLoading();try{const e=await this.apiService.login(t,s);if(e.success&&e.data){const{token:t,user:s}=e.data;await this.storageService.setAuthToken(t),await this.storageService.setUserData(s),this.apiService.setAuthToken(t),this.currentUser=s,this.showDashboard()}else this.showError(e.error||"Login failed"),this.showLogin()}catch(e){console.error("Login error:",e),this.showError("An error occurred during login"),this.showLogin()}}else this.showError("Please fill in all fields")}async handleSignup(e){e.preventDefault();const t=document.getElementById("signupName").value,s=document.getElementById("signupUsername").value,r=document.getElementById("signupEmail").value,a=document.getElementById("signupPassword").value;if(t&&s&&r&&a){this.showLoading();try{const e=await this.apiService.signup(s,r,a,t);if(e.success&&e.data){const{token:t,user:s}=e.data;await this.storageService.setAuthToken(t),await this.storageService.setUserData(s),this.apiService.setAuthToken(t),this.currentUser=s,this.showDashboard()}else this.showError(e.error||"Signup failed"),this.showSignup()}catch(e){console.error("Signup error:",e),this.showError("An error occurred during signup"),this.showSignup()}}else this.showError("Please fill in all fields")}async handleLogout(){try{await this.apiService.logout()}catch(e){console.error("Logout API error:",e)}await this.storageService.clearAuthToken(),await this.storageService.clearUserData(),this.apiService.clearAuthToken(),this.currentUser=null,this.showLogin()}showScreen(e){document.querySelectorAll(".screen").forEach(e=>e.classList.add("hidden"));const t=document.getElementById(e);t&&t.classList.remove("hidden")}showLoading(){this.showScreen("loading")}showLogin(){this.showScreen("login");const e=document.getElementById("loginForm");e&&e.reset()}showSignup(){this.showScreen("signup");const e=document.getElementById("signupForm");e&&e.reset()}showDashboard(){this.showScreen("dashboard");const e=document.getElementById("userName");e&&this.currentUser&&(e.textContent=this.currentUser.name)}showError(e){this.showScreen("error");const t=document.getElementById("errorMessage");t&&(t.textContent=e)}}document.addEventListener("DOMContentLoaded",()=>{new a})})();