(()=>{"use strict";const e="auth_token",t="user_data";class a{constructor(){}static getInstance(){return a.instance||(a.instance=new a),a.instance}async get(e){try{return(await chrome.storage.local.get(e))[e]||null}catch(e){return console.error("Error getting from storage:",e),null}}async set(e,t){try{await chrome.storage.local.set({[e]:t})}catch(e){console.error("Error setting storage:",e)}}async remove(e){try{await chrome.storage.local.remove(e)}catch(e){console.error("Error removing from storage:",e)}}async clear(){try{await chrome.storage.local.clear()}catch(e){console.error("Error clearing storage:",e)}}async getAuthToken(){const t=await this.get(e);return t?Date.now()>t.expiresAt?(await this.clearAuthToken(),null):t:null}async setAuthToken(t){await this.set(e,t)}async clearAuthToken(){await this.remove(e)}async getUserData(){return this.get(t)}async setUserData(e){await this.set(t,e)}async clearUserData(){await this.remove(t)}}class s{constructor(){this.authToken=null}static getInstance(){return s.instance||(s.instance=new s),s.instance}setAuthToken(e){this.authToken=e}getAuthToken(){return this.authToken}clearAuthToken(){this.authToken=null}async makeRequest(e,t={}){const a=`http://127.0.0.1:8000/api${e}`,s={"Content-Type":"application/json"};this.authToken&&(s.Authorization=`Token ${this.authToken.token}`);try{const e=await fetch(a,{...t,headers:{...s,...t.headers}}),r=await e.json();return e.ok?{success:!0,data:r}:{success:!1,error:r.error||r.message||`HTTP ${e.status}`}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Network error"}}}async login(e,t){const a=await this.makeRequest("/users/login/",{method:"POST",body:JSON.stringify({username:e,password:t})});return a.success&&a.data?{success:!0,data:{token:{token:a.data.token,expiresAt:Date.now()+864e5,userId:a.data.user_id.toString()},user:{id:a.data.user_id.toString(),email:"",name:a.data.username}}}:a}async signup(e,t,a,s){const r=await this.makeRequest("/users/register/",{method:"POST",body:JSON.stringify({username:e,email:t,password:a,first_name:s.split(" ")[0]||s,last_name:s.split(" ").slice(1).join(" ")||""})});return r.success&&r.data?{success:!0,data:{token:{token:r.data.token,expiresAt:Date.now()+864e5,userId:r.data.user_id.toString()},user:{id:r.data.user_id.toString(),email:t,name:r.data.username}}}:r}async logout(){return this.makeRequest("/users/logout/",{method:"POST"})}async getPlayerDataByName(e){return this.makeRequest(`/players/data/${encodeURIComponent(e)}/`)}async getCurrentUser(){const e=await this.makeRequest("/users/validate-token/");return e.success&&e.data?{success:!0,data:{id:e.data.user_id.toString(),email:"",name:e.data.username}}:e}}new class{constructor(){this.storageService=a.getInstance(),this.apiService=s.getInstance(),this.initialize()}async initialize(){await this.initializeAuth(),this.setupEventListeners()}async initializeAuth(){const e=await this.storageService.getAuthToken();e&&this.apiService.setAuthToken(e)}setupEventListeners(){chrome.runtime.onInstalled.addListener(e=>{"install"===e.reason&&this.setDefaultSettings()}),chrome.runtime.onMessage.addListener((e,t,a)=>(this.handleMessage(e,t,a),!0)),chrome.storage.onChanged.addListener((e,t)=>{this.handleStorageChange(e,t)})}async setDefaultSettings(){}async handleMessage(e,t,a){try{switch(e.type){case"GET_AUTH_STATUS":const t=await this.storageService.getAuthToken();a({isAuthenticated:!!t,user:await this.storageService.getUserData(),token:t});break;case"LOGOUT":await this.storageService.clearAuthToken(),await this.storageService.clearUserData(),this.apiService.clearAuthToken(),a({success:!0});break;case"GET_PLAYER_DATA":if(!this.apiService.getAuthToken())return void a({error:"Not authenticated"});a(await this.apiService.getPlayerDataByName(e.playerName));break;default:a({error:"Unknown message type"})}}catch(e){console.error("Error handling message:",e),a({error:"Internal error"})}}handleStorageChange(e,t){if("local"===t&&e.auth_token){const t=e.auth_token.newValue;t?this.apiService.setAuthToken(t):this.apiService.clearAuthToken()}}}})();